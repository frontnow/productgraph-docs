{
  "openapi": "3.1.0",
  "info": {
  "title": "ProductGraph API",
  "version": "1.0.0",
  "description": "API for managing products, brands, and related data with multi-language support",
  "contact": {
  "name": "API Support",
  "email": "api-support@productgraph.org"
  },
  "license": {
  "name": "MIT",
  "url": "https://opensource.org/licenses/MIT"
  }
  },
  "servers": [
  {
  "url": "/api",
  "description": "API endpoint"
  },
  {
  "url": "https://api.productgraph.org/v1",
  "description": "Production API server"
  },
  {
  "url": "https://sandbox.productgraph.org/v1",
  "description": "Sandbox API server for testing"
  }
  ],
  "tags": [
  {
  "name": "Products",
  "description": "Product management endpoints"
  },
  {
  "name": "Brands",
  "description": "Brand information and management"
  },
  {
  "name": "Search",
  "description": "Product search capabilities"
  },
  {
  "name": "Credits",
  "description": "API credits management"
  },
  {
  "name": "Authentication",
  "description": "API authentication and rate limits"
  },
  {
  "name": "Multilanguage",
  "description": "Localization and translation features"
  },
  {
  "name": "Historical Data",
  "description": "Track changes to product information over time"
  },
  {
  "name": "Analytics",
  "description": "API usage analytics and reporting"
  },
  {
  "name": "Webhooks",
  "description": "Real-time event notifications"
  }
  ],
  "paths": {
  "/products": {
  "get": {
  "summary": "Get all products",
  "description": "Retrieve a list of all products with optional pagination",
  "tags": [
  "Products"
  ],
  "parameters": [
  {
  "name": "limit",
  "in": "query",
  "description": "Maximum number of items to return",
  "required": false,
  "schema": {
  "type": "integer",
  "minimum": 1
  }
  },
  {
  "name": "offset",
  "in": "query",
  "description": "Number of items to skip for pagination",
  "required": false,
  "schema": {
  "type": "integer",
  "minimum": 0
  }
  },
  {
  "name": "lang",
  "in": "query",
  "description": "Preferred language for content",
  "required": false,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "languages",
  "in": "query",
  "description": "Prioritized list of languages for content",
  "required": false,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "fields",
  "in": "query",
  "description": "Comma-separated list of fields to include",
  "required": false,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "include_translation_status",
  "in": "query",
  "description": "Whether to include translation status information",
  "required": false,
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "List of products",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/PaginatedProductsResponse"
  }
  }
  }
  },
  "400": {
  "description": "Invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  },
  "post": {
  "summary": "Create a new product",
  "description": "Add a new product to the database",
  "tags": [
  "Products"
  ],
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ProductInput"
  }
  }
  }
  },
  "responses": {
  "201": {
  "description": "Product created successfully",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ProductResponse"
  }
  }
  }
  },
  "400": {
  "description": "Invalid input",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  }
  },
  "/products/{product_id}": {
  "get": {
  "summary": "Get product by ID",
  "description": "Retrieve a single product by its ID with language customization",
  "tags": [
  "Products"
  ],
  "parameters": [
  {
  "name": "product_id",
  "in": "path",
  "description": "Product ID",
  "required": true,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "lang",
  "in": "query",
  "description": "Preferred language for content",
  "required": false,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "languages",
  "in": "query",
  "description": "Prioritized list of languages for content",
  "required": false,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "fields",
  "in": "query",
  "description": "Comma-separated list of fields to include",
  "required": false,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "include_translation_status",
  "in": "query",
  "description": "Whether to include translation status information",
  "required": false,
  "schema": {
  "type": "boolean"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Product found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ProductResponse"
  }
  }
  }
  },
  "404": {
  "description": "Product not found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  },
  "put": {
  "summary": "Update product",
  "description": "Update an existing product by ID",
  "tags": [
  "Products"
  ],
  "parameters": [
  {
  "name": "product_id",
  "in": "path",
  "description": "Product ID",
  "required": true,
  "schema": {
  "type": "string"
  }
  }
  ],
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ProductUpdateInput"
  }
  }
  }
  },
  "responses": {
  "200": {
  "description": "Product updated successfully",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ProductResponse"
  }
  }
  }
  },
  "404": {
  "description": "Product not found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  },
  "delete": {
  "summary": "Delete product",
  "description": "Delete a product by ID",
  "tags": [
  "Products"
  ],
  "parameters": [
  {
  "name": "product_id",
  "in": "path",
  "description": "Product ID",
  "required": true,
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Product deleted successfully",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/DeleteResponse"
  }
  }
  }
  },
  "404": {
  "description": "Product not found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  }
  },
  "/products/{product_id}/translate": {
  "post": {
  "summary": "Request product translation",
  "description": "Request translation of product content into additional languages",
  "tags": [
  "Products",
  "Multilanguage"
  ],
  "parameters": [
  {
  "name": "product_id",
  "in": "path",
  "description": "Product ID",
  "required": true,
  "schema": {
  "type": "string"
  }
  }
  ],
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/TranslationRequest"
  }
  }
  }
  },
  "responses": {
  "202": {
  "description": "Translation request accepted",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/TranslationJobResponse"
  }
  }
  }
  },
  "400": {
  "description": "Invalid request",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "404": {
  "description": "Product not found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  }
  },
  "/products/{product_id}/history/content": {
  "get": {
  "summary": "Get product history",
  "description": "Track changes to product information over time",
  "tags": [
  "Products",
  "Historical Data"
  ],
  "parameters": [
  {
  "name": "product_id",
  "in": "path",
  "description": "Product ID",
  "required": true,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "timeframe",
  "in": "query",
  "description": "Time period for history (1d, 7d, 30d, 90d, 1y, all)",
  "required": false,
  "schema": {
  "type": "string",
  "enum": [
  "1d",
  "7d",
  "30d",
  "90d",
  "1y",
  "all"
  ],
  "default": "30d"
  }
  },
  {
  "name": "fields",
  "in": "query",
  "description": "Specific fields to include in history",
  "required": false,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "lang",
  "in": "query",
  "description": "Language filter for history records",
  "required": false,
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Product history",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HistoricalDataResponse"
  }
  }
  }
  },
  "404": {
  "description": "Product not found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  }
  },
  "/search": {
  "post": {
  "summary": "Search for products",
  "description": "Initiate an asynchronous search operation with advanced options",
  "tags": [
  "Search"
  ],
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SearchRequest"
  }
  }
  }
  },
  "responses": {
  "202": {
  "description": "Search request accepted",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SearchJobResponse"
  }
  }
  }
  },
  "400": {
  "description": "Invalid search parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  }
  },
  "/search/{job_id}": {
  "get": {
  "summary": "Get search results",
  "description": "Retrieve the results of a previously initiated search",
  "tags": [
  "Search"
  ],
  "parameters": [
  {
  "name": "job_id",
  "in": "path",
  "description": "Search job ID",
  "required": true,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "page",
  "in": "query",
  "description": "Page number for results pagination",
  "required": false,
  "schema": {
  "type": "integer",
  "minimum": 1,
  "default": 1
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Search results",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/SearchResultsResponse"
  }
  }
  }
  },
  "404": {
  "description": "Search job not found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  }
  },
  "/brands/{brand_id}": {
  "get": {
  "summary": "Get brand by ID",
  "description": "Retrieve a specific brand by its unique identifier",
  "tags": [
  "Brands"
  ],
  "parameters": [
  {
  "name": "brand_id",
  "in": "path",
  "description": "The ID of the brand to retrieve",
  "required": true,
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Brand details",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Brand"
  }
  }
  }
  },
  "404": {
  "description": "Brand not found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  }
  },
  "/brands/search": {
  "get": {
  "summary": "Search for brands",
  "description": "Search for brands using various criteria",
  "tags": [
  "Brands"
  ],
  "parameters": [
  {
  "name": "query",
  "in": "query",
  "description": "Text to search in name and aliases",
  "required": false,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "established_after",
  "in": "query",
  "description": "Filter by establishment year",
  "required": false,
  "schema": {
  "type": "integer"
  }
  },
  {
  "name": "country",
  "in": "query",
  "description": "Filter by country",
  "required": false,
  "schema": {
  "type": "string"
  }
  },
  {
  "name": "page",
  "in": "query",
  "description": "Page number for pagination",
  "required": false,
  "schema": {
  "type": "integer",
  "minimum": 1,
  "default": 1
  }
  },
  {
  "name": "per_page",
  "in": "query",
  "description": "Items per page",
  "required": false,
  "schema": {
  "type": "integer",
  "minimum": 1,
  "maximum": 50,
  "default": 20
  }
  }
  ],
  "responses": {
  "200": {
  "description": "List of brands matching search criteria",
  "content": {
  "application/json": {
  "schema": {
  "type": "object",
  "properties": {
  "results": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/Brand"
  }
  },
  "total": {
  "type": "integer",
  "example": 10
  },
  "page": {
  "type": "integer",
  "example": 1
  },
  "pages": {
  "type": "integer",
  "example": 1
  }
  }
  }
  }
  }
  },
  "400": {
  "description": "Invalid search parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  }
  }
  },
  "/credits": {
  "get": {
  "summary": "Get credit balance",
  "description": "Check your current credit balance and usage statistics",
  "tags": [
  "Credits"
  ],
  "parameters": [],
  "responses": {
  "200": {
  "description": "Credit information",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/CreditsResponse"
  }
  }
  }
  },
  "401": {
  "description": "Unauthorized - Authentication required",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  },
  "security": [
  {
  "ApiKeyAuth": []
  }
  ]
  }
  },
  "/webhooks": {
  "post": {
  "summary": "Create webhook",
  "description": "Configure webhook endpoints to receive notifications about specific events",
  "tags": [
  "Webhooks"
  ],
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/WebhookRequest"
  }
  }
  }
  },
  "responses": {
  "201": {
  "description": "Webhook created successfully",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/WebhookResponse"
  }
  }
  }
  },
  "400": {
  "description": "Invalid request parameters",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "401": {
  "description": "Unauthorized - Authentication required",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  },
  "security": [
  {
  "ApiKeyAuth": []
  }
  ]
  },
  "get": {
  "summary": "List webhooks",
  "description": "Get a list of all configured webhooks",
  "tags": [
  "Webhooks"
  ],
  "parameters": [],
  "responses": {
  "200": {
  "description": "List of webhooks",
  "content": {
  "application/json": {
  "schema": {
  "type": "object",
  "properties": {
  "webhooks": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/WebhookResponse"
  }
  }
  }
  }
  }
  }
  },
  "401": {
  "description": "Unauthorized - Authentication required",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  },
  "security": [
  {
  "ApiKeyAuth": []
  }
  ]
  }
  },
  "/webhooks/{webhook_id}": {
  "get": {
  "summary": "Get webhook details",
  "description": "Retrieve details about a specific webhook",
  "tags": [
  "Webhooks"
  ],
  "parameters": [
  {
  "name": "webhook_id",
  "in": "path",
  "description": "Webhook ID",
  "required": true,
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Webhook details",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/WebhookResponse"
  }
  }
  }
  },
  "401": {
  "description": "Unauthorized - Authentication required",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "404": {
  "description": "Webhook not found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  },
  "security": [
  {
  "ApiKeyAuth": []
  }
  ]
  },
  "put": {
  "summary": "Update webhook",
  "description": "Update an existing webhook configuration",
  "tags": [
  "Webhooks"
  ],
  "parameters": [
  {
  "name": "webhook_id",
  "in": "path",
  "description": "Webhook ID",
  "required": true,
  "schema": {
  "type": "string"
  }
  }
  ],
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/WebhookRequest"
  }
  }
  }
  },
  "responses": {
  "200": {
  "description": "Webhook updated successfully",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/WebhookResponse"
  }
  }
  }
  },
  "401": {
  "description": "Unauthorized - Authentication required",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "404": {
  "description": "Webhook not found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  },
  "security": [
  {
  "ApiKeyAuth": []
  }
  ]
  },
  "delete": {
  "summary": "Delete webhook",
  "description": "Delete an existing webhook",
  "tags": [
  "Webhooks"
  ],
  "parameters": [
  {
  "name": "webhook_id",
  "in": "path",
  "description": "Webhook ID",
  "required": true,
  "schema": {
  "type": "string"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Webhook deleted successfully",
  "content": {
  "application/json": {
  "schema": {
  "type": "object",
  "properties": {
  "success": {
  "type": "boolean",
  "example": true
  },
  "message": {
  "type": "string",
  "example": "Webhook deleted successfully"
  }
  }
  }
  }
  }
  },
  "401": {
  "description": "Unauthorized - Authentication required",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "404": {
  "description": "Webhook not found",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  },
  "500": {
  "description": "Server error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ErrorResponse"
  }
  }
  }
  }
  },
  "security": [
  {
  "ApiKeyAuth": []
  }
  ]
  }
  }
  },
  "components": {
  "schemas": {
  "Product": {
  "type": "object",
  "properties": {
  "id": {
  "type": "string",
  "description": "Unique identifier for the product",
  "example": "prod_98765"
  },
  "name": {
  "type": "object",
  "description": "Product name in various languages",
  "example": {
  "en": "Sony WH-1000XM4 Wireless Noise-Canceling Headphones",
  "de": "Sony WH-1000XM4 Kabellose Noise-Cancelling-Kopfhörer"
  }
  },
  "gtin": {
  "type": "string",
  "description": "Global Trade Item Number",
  "example": "4548736112001"
  },
  "url": {
  "type": "string",
  "description": "Product URL",
  "example": "https://example.com/smart-tv-55"
  },
  "price": {
  "type": "number",
  "description": "Product price",
  "example": 599.99
  },
  "description": {
  "type": "object",
  "description": "Product description in various languages",
  "example": {
  "en": "Premium noise-canceling wireless headphones with exceptional sound quality",
  "de": "Premium-Noise-Cancelling-Kopfhörer mit außergewöhnlicher Klangqualität"
  }
  }
  },
  "required": [
  "name"
  ]
  },
  "Brand": {
  "type": "object",
  "properties": {
  "id": {
  "type": "string",
  "description": "Unique identifier for the brand",
  "example": "brand_sony"
  },
  "name": {
  "type": "string",
  "description": "Brand name",
  "example": "Sony"
  },
  "searchable_aliases": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "description": "Alternative names for searching",
  "example": [
  "sony corporation",
  "sony electronics"
  ]
  },
  "established": {
  "type": "integer",
  "description": "Year the brand was established",
  "example": 1946
  },
  "display_name": {
  "type": "object",
  "description": "Brand display name in various languages",
  "example": {
  "en": "Brand",
  "de": "Marke"
  }
  },
  "headquarters": {
  "type": "object",
  "properties": {
  "city": {
  "type": "string",
  "example": "Tokyo"
  },
  "country": {
  "type": "string",
  "example": "Japan"
  }
  }
  },
  "description": {
  "type": "object",
  "description": "Brand description in various languages",
  "example": {
  "en": "Global electronics and entertainment company known for innovation and quality",
  "de": "Globales Elektronik- und Unterhaltungsunternehmen, bekannt für Innovation und Qualität"
  }
  },
  "logo_url": {
  "type": "string",
  "description": "URL to the brand logo",
  "example": "https://example.com/logos/sony_logo_primary.svg"
  }
  },
  "required": [
  "name"
  ]
  },
  "ProductWithBrands": {
  "allOf": [
  {
  "$ref": "#/components/schemas/Product"
  },
  {
  "type": "object",
  "properties": {
  "brand": {
  "$ref": "#/components/schemas/Brand"
  },
  "categories": {
  "type": "array",
  "items": {
  "type": "object",
  "properties": {
  "id": {
  "type": "string",
  "example": "cat_456"
  },
  "name": {
  "type": "object",
  "example": {
  "en": "Wireless Headphones",
  "de": "Kabellose Kopfhörer"
  }
  },
  "parent": {
  "type": "string",
  "example": "cat_123"
  },
  "primary": {
  "type": "boolean",
  "example": true
  }
  }
  }
  },
  "content": {
  "type": "object",
  "properties": {
  "short_description": {
  "type": "object",
  "example": {
  "en": "Premium wireless headphones with industry-leading noise cancellation.",
  "de": "Premium-Funkkopfhörer mit branchenführender Geräuschunterdrückung."
  }
  },
  "description": {
  "type": "object",
  "example": {
  "en": "Industry-leading noise cancellation technology helps block out background noise...",
  "de": "Branchenführende Geräuschunterdrückungstechnologie hilft..."
  }
  },
  "key_benefits": {
  "type": "array",
  "items": {
  "type": "object",
  "example": {
  "en": "Industry-leading noise cancellation",
  "de": "Branchenführende Geräuschunterdrückung"
  }
  }
  }
  }
  },
  "quality_score": {
  "type": "object",
  "properties": {
  "score": {
  "type": "integer",
  "example": 92
  },
  "breakdown": {
  "type": "object",
  "properties": {
  "images": {
  "type": "integer",
  "example": 95
  },
  "description": {
  "type": "integer",
  "example": 90
  },
  "attributes": {
  "type": "integer",
  "example": 95
  },
  "overall_completeness": {
  "type": "integer",
  "example": 88
  }
  }
  }
  }
  }
  }
  }
  ]
  },
  "PaginationInfo": {
  "type": "object",
  "properties": {
  "total": {
  "type": "integer",
  "description": "Total number of items",
  "example": 50
  },
  "limit": {
  "type": [
  "integer",
  "null"
  ],
  "description": "Items per page",
  "example": 10
  },
  "offset": {
  "type": [
  "integer",
  "null"
  ],
  "description": "Number of items to skip",
  "example": 0
  },
  "hasMore": {
  "type": "boolean",
  "description": "Whether more items exist",
  "example": true
  },
  "page": {
  "type": "integer",
  "description": "Current page number",
  "example": 1
  },
  "total_pages": {
  "type": "integer",
  "description": "Total number of pages",
  "example": 5
  }
  }
  },
  "ProductInput": {
  "type": "object",
  "properties": {
  "name": {
  "type": "object",
  "description": "Product name in various languages",
  "example": {
  "en": "Sony WH-1000XM4 Wireless Headphones",
  "de": "Sony WH-1000XM4 Kabellose Kopfhörer"
  }
  },
  "gtin": {
  "type": "string",
  "description": "Global Trade Item Number",
  "example": "4548736112001"
  },
  "url": {
  "type": "string",
  "description": "Product URL",
  "example": "https://example.com/products/sony-wh1000xm4"
  },
  "price": {
  "type": "number",
  "description": "Product price",
  "example": 599.99
  },
  "description": {
  "type": "object",
  "description": "Product description in various languages",
  "example": {
  "en": "Premium wireless headphones with industry-leading noise cancellation.",
  "de": "Premium-Funkkopfhörer mit branchenführender Geräuschunterdrückung."
  }
  },
  "brand_id": {
  "type": "string",
  "description": "Brand identifier",
  "example": "brand_sony"
  },
  "category_ids": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "description": "Category identifiers",
  "example": [
  "cat_456",
  "cat_789"
  ]
  }
  },
  "required": [
  "name"
  ]
  },
  "ProductUpdateInput": {
  "type": "object",
  "properties": {
  "name": {
  "type": "object",
  "description": "Product name in various languages",
  "example": {
  "en": "Sony WH-1000XM4 Wireless Headphones - Updated",
  "de": "Sony WH-1000XM4 Kabellose Kopfhörer - Aktualisiert"
  }
  },
  "url": {
  "type": "string",
  "description": "Product URL",
  "example": "https://example.com/products/sony-wh1000xm4"
  },
  "price": {
  "type": "number",
  "description": "Product price",
  "example": 549.99
  },
  "description": {
  "type": "object",
  "description": "Product description in various languages",
  "example": {
  "en": "Premium wireless headphones with industry-leading noise cancellation and new features.",
  "de": "Premium-Funkkopfhörer mit branchenführender Geräuschunterdrückung und neuen Funktionen."
  }
  }
  }
  },
  "ProductResponse": {
  "type": "object",
  "properties": {
  "success": {
  "type": "boolean",
  "example": true
  },
  "data": {
  "$ref": "#/components/schemas/ProductWithBrands"
  }
  }
  },
  "PaginatedProductsResponse": {
  "type": "object",
  "properties": {
  "success": {
  "type": "boolean",
  "example": true
  },
  "data": {
  "type": "array",
  "items": {
  "$ref": "#/components/schemas/ProductWithBrands"
  }
  },
  "pagination": {
  "$ref": "#/components/schemas/PaginationInfo"
  }
  }
  },
  "ErrorResponse": {
  "type": "object",
  "properties": {
  "success": {
  "type": "boolean",
  "example": false
  },
  "error": {
  "type": "object",
  "properties": {
  "code": {
  "type": "string",
  "example": "invalid_language"
  },
  "message": {
  "type": "string",
  "example": "The requested language 'xyz' is not supported."
  },
  "documentation_url": {
  "type": "string",
  "example": "https://productgraph.org/docs/errors#invalid_language"
  }
  }
  },
  "statusCode": {
  "type": "integer",
  "example": 400
  }
  }
  },
  "DeleteResponse": {
  "type": "object",
  "properties": {
  "success": {
  "type": "boolean",
  "example": true
  },
  "data": {
  "type": "object",
  "properties": {
  "message": {
  "type": "string",
  "example": "Product deleted successfully"
  }
  }
  }
  }
  },
  "CreditsResponse": {
  "type": "object",
  "properties": {
  "total_credits": {
  "type": "integer",
  "example": 1000
  },
  "used_credits": {
  "type": "integer",
  "example": 250
  },
  "remaining_credits": {
  "type": "integer",
  "example": 750
  },
  "plan": {
  "type": "string",
  "example": "Startup"
  },
  "credits_reset_at": {
  "type": "string",
  "format": "date-time",
  "example": "2023-05-01T00:00:00Z"
  }
  }
  },
  "SearchRequest": {
  "type": "object",
  "properties": {
  "query": {
  "type": "string",
  "description": "Search query text",
  "example": "wireless headphones"
  },
  "languages": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "description": "Priority order of languages",
  "example": [
  "de",
  "en"
  ]
  },
  "cross_language_search": {
  "type": "boolean",
  "description": "Whether to search across all available languages",
  "example": true
  },
  "result_language": {
  "type": "string",
  "description": "Preferred language for results",
  "example": "de"
  },
  "filter": {
  "type": "object",
  "properties": {
  "brand": {
  "type": "string",
  "example": "Sony"
  },
  "category": {
  "type": "string",
  "example": "Electronics"
  },
  "attributes": {
  "type": "object",
  "additionalProperties": true,
  "example": {
  "color": "black",
  "wireless": true
  }
  }
  }
  },
  "sort": {
  "type": "object",
  "properties": {
  "field": {
  "type": "string",
  "example": "relevance"
  },
  "order": {
  "type": "string",
  "enum": [
  "asc",
  "desc"
  ],
  "example": "desc"
  }
  }
  }
  },
  "required": [
  "query"
  ]
  },
  "SearchJobResponse": {
  "type": "object",
  "properties": {
  "job_id": {
  "type": "string",
  "example": "srch_12345"
  },
  "status": {
  "type": "string",
  "enum": [
  "queued",
  "processing",
  "completed",
  "failed"
  ],
  "example": "queued"
  },
  "created_at": {
  "type": "string",
  "format": "date-time",
  "example": "2023-04-14T10:30:22Z"
  }
  }
  },
  "SearchResultsResponse": {
  "type": "object",
  "properties": {
  "job_id": {
  "type": "string",
  "example": "srch_12345"
  },
  "status": {
  "type": "string",
  "enum": [
  "queued",
  "processing",
  "completed",
  "failed"
  ],
  "example": "completed"
  },
  "query": {
  "type": "string",
  "example": "wireless headphones"
  },
  "results": {
  "type": "array",
  "items": {
  "type": "object",
  "properties": {
  "product_id": {
  "type": "string",
  "example": "prod_98765"
  },
  "name": {
  "type": "object",
  "example": {
  "en": "Sony WH-1000XM4 Wireless Noise-Canceling Headphones",
  "de": "Sony WH-1000XM4 Kabellose Noise-Cancelling-Kopfhörer"
  }
  },
  "gtin": {
  "type": "string",
  "example": "4548736112001"
  },
  "score": {
  "type": "number",
  "format": "float",
  "example": 0.95
  },
  "language_match": {
  "type": "object",
  "properties": {
  "matched_language": {
  "type": "string",
  "example": "de"
  },
  "original_query_language": {
  "type": "string",
  "example": "en"
  },
  "confidence": {
  "type": "number",
  "format": "float",
  "example": 0.92
  }
  }
  },
  "summary": {
  "type": "object",
  "example": {
  "en": "Premium noise-canceling wireless headphones with exceptional sound quality",
  "de": "Premium-Noise-Cancelling-Kopfhörer mit außergewöhnlicher Klangqualität"
  }
  },
  "brand": {
  "type": "string",
  "example": "Sony"
  },
  "main_image_url": {
  "type": "string",
  "example": "https://example.com/images/sony-wh1000xm4.jpg"
  }
  }
  }
  },
  "facets": {
  "type": "object",
  "properties": {
  "brand": {
  "type": "array",
  "items": {
  "type": "object",
  "properties": {
  "name": {
  "type": "string",
  "example": "Sony"
  },
  "count": {
  "type": "integer",
  "example": 12
  }
  }
  }
  },
  "category": {
  "type": "array",
  "items": {
  "type": "object",
  "properties": {
  "name": {
  "type": "string",
  "example": "Headphones"
  },
  "count": {
  "type": "integer",
  "example": 28
  }
  }
  }
  },
  "attributes": {
  "type": "object",
  "additionalProperties": {
  "type": "array",
  "items": {
  "type": "object",
  "properties": {
  "name": {
  "type": "string",
  "example": "Black"
  },
  "count": {
  "type": "integer",
  "example": 18
  }
  }
  }
  }
  }
  }
  },
  "created_at": {
  "type": "string",
  "format": "date-time",
  "example": "2023-04-14T10:30:22Z"
  },
  "completed_at": {
  "type": "string",
  "format": "date-time",
  "example": "2023-04-14T10:31:15Z"
  },
  "total_results": {
  "type": "integer",
  "example": 124
  },
  "page": {
  "type": "integer",
  "example": 1
  },
  "total_pages": {
  "type": "integer",
  "example": 13
  }
  }
  },
  "TranslationRequest": {
  "type": "object",
  "properties": {
  "target_languages": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "description": "Languages to translate content into",
  "example": [
  "de",
  "fr"
  ]
  },
  "priority": {
  "type": "string",
  "enum": [
  "low",
  "normal",
  "high"
  ],
  "description": "Processing priority",
  "example": "normal"
  },
  "fields": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "description": "Fields to translate",
  "example": [
  "description",
  "attributes",
  "seo"
  ]
  },
  "callback_url": {
  "type": "string",
  "description": "Webhook URL for completion notification",
  "example": "https://your-webhook.com/translation-completed"
  }
  },
  "required": [
  "target_languages"
  ]
  },
  "TranslationJobResponse": {
  "type": "object",
  "properties": {
  "job_id": {
  "type": "string",
  "example": "tr_45678"
  },
  "status": {
  "type": "string",
  "enum": [
  "queued",
  "processing",
  "completed",
  "failed"
  ],
  "example": "queued"
  },
  "estimated_completion": {
  "type": "string",
  "format": "date-time",
  "example": "2023-04-15T16:00:00Z"
  }
  }
  },
  "WebhookRequest": {
  "type": "object",
  "properties": {
  "url": {
  "type": "string",
  "example": "https://your-callback-url.com/webhook"
  },
  "events": {
  "type": "array",
  "items": {
  "type": "string",
  "enum": [
  "search_completed",
  "product_updated",
  "translation_completed",
  "quality_score_changed"
  ]
  },
  "example": [
  "search_completed",
  "product_updated",
  "translation_completed"
  ]
  },
  "language_filters": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "description": "Only trigger for these languages",
  "example": [
  "de",
  "fr"
  ]
  },
  "secret": {
  "type": "string",
  "description": "For signature verification",
  "example": "your-webhook-secret"
  }
  },
  "required": [
  "url",
  "events"
  ]
  },
  "WebhookResponse": {
  "type": "object",
  "properties": {
  "webhook_id": {
  "type": "string",
  "example": "wh_34567"
  },
  "url": {
  "type": "string",
  "example": "https://your-callback-url.com/webhook"
  },
  "events": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "example": [
  "search_completed",
  "product_updated",
  "translation_completed"
  ]
  },
  "language_filters": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "example": [
  "de",
  "fr"
  ]
  },
  "status": {
  "type": "string",
  "enum": [
  "active",
  "paused",
  "disabled"
  ],
  "example": "active"
  },
  "created_at": {
  "type": "string",
  "format": "date-time",
  "example": "2023-04-14T10:30:22Z"
  }
  }
  },
  "HistoricalDataResponse": {
  "type": "object",
  "properties": {
  "product_id": {
  "type": "string",
  "example": "prod_98765"
  },
  "content_history": {
  "type": "array",
  "items": {
  "type": "object",
  "properties": {
  "timestamp": {
  "type": "string",
  "format": "date-time",
  "example": "2023-04-10T14:22:31Z"
  },
  "field": {
  "type": "string",
  "example": "description"
  },
  "language": {
  "type": "string",
  "example": "en"
  },
  "previous_value": {
  "type": "string",
  "example": "Industry-leading noise cancellation with premium sound quality and long battery life."
  },
  "new_value": {
  "type": "string",
  "example": "Industry-leading noise cancellation technology helps block out background noise..."
  },
  "change_type": {
  "type": "string",
  "enum": [
  "add",
  "update",
  "remove"
  ],
  "example": "update"
  },
  "change_source": {
  "type": "string",
  "example": "enrichment"
  },
  "change_reason": {
  "type": "string",
  "example": "Quality improvement"
  }
  }
  }
  },
  "summarized_changes": {
  "type": "object",
  "properties": {
  "total_changes": {
  "type": "integer",
  "example": 17
  },
  "by_field": {
  "type": "object",
  "additionalProperties": {
  "type": "integer"
  },
  "example": {
  "description": 3,
  "attributes": 8,
  "images": 6
  }
  },
  "by_language": {
  "type": "object",
  "additionalProperties": {
  "type": "integer"
  },
  "example": {
  "en": 10,
  "de": 7
  }
  },
  "by_change_type": {
  "type": "object",
  "additionalProperties": {
  "type": "integer"
  },
  "example": {
  "add": 9,
  "update": 8,
  "remove": 0
  }
  }
  }
  }
  }
  },
  "AnalyticsResponse": {
  "type": "object",
  "properties": {
  "timeframe": {
  "type": "string",
  "example": "30d"
  },
  "total_requests": {
  "type": "integer",
  "example": 3452
  },
  "requests_by_endpoint": {
  "type": "array",
  "items": {
  "type": "object",
  "properties": {
  "endpoint": {
  "type": "string",
  "example": "/search"
  },
  "count": {
  "type": "integer",
  "example": 1245
  },
  "percentage": {
  "type": "number",
  "format": "float",
  "example": 36.1
  }
  }
  }
  },
  "requests_by_language": {
  "type": "array",
  "items": {
  "type": "object",
  "properties": {
  "language": {
  "type": "string",
  "example": "en"
  },
  "count": {
  "type": "integer",
  "example": 2134
  },
  "percentage": {
  "type": "number",
  "format": "float",
  "example": 61.8
  }
  }
  }
  },
  "average_processing_time_sec": {
  "type": "object",
  "properties": {
  "overall": {
  "type": "number",
  "format": "float",
  "example": 2.1
  },
  "by_endpoint": {
  "type": "object",
  "additionalProperties": {
  "type": "number",
  "format": "float"
  }
  }
  }
  },
  "credits_used": {
  "type": "integer",
  "example": 1240
  }
  }
  }
  },
  "securitySchemes": {
  "ApiKeyAuth": {
  "type": "apiKey",
  "in": "header",
  "name": "X-API-Key"
  }
  }
  }
  }